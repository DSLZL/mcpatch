<!-- 这是 PCL 的主页自定义文件。你可以通过修改这个文件来自定义 PCL 主页：添加文本、打开网页、启动游戏，等等。
     如果你倒腾这个文件把 PCL 玩炸了，把这个文件直接删除就行了。
     下列内容均基于 WPF 框架。你可以在继续之前先尝试自学 XAML 与 WPF 的基础，这能让你更轻松地理解下列内容。
     你也可以使用 Ctrl + F 快速查找。例如，若需要改变文本颜色，则搜索 “颜色” 即可。 -->

<!--local:MyCard Title="纯文本" Margin="0,0,0,15" CanSwap="True" IsSwaped="True">
	<StackPanel Margin="25,40,23,15">
        <TextBlock TextWrapping="Wrap" Margin="0,0,0,4"
                    Text="每个 local:MyCard 代表一张卡片，你可以添加、删除格式类似的 MyCard 来添加多个卡片。每个 TextBlock 代表一段文本，你可以在 Text 属性中书写任何你想写的内容，也可以自行添加更多的 TextBlock。" />
        <TextBlock TextWrapping="Wrap" Margin="0,0,0,4" FontSize="11"
                    Text="你可以通过添加、删除属性修改样式，例如上一行的 FontSize 就会将字号改为 11 号。" />
        <TextBlock TextWrapping="Wrap" Margin="20,5,20,0" Foreground="#8C7721"
                    Text="它还有许多可以调整的属性：上一行的 Margin 调整了边距，Foreground 则会让文字变色。" />
	</StackPanel>
</local:MyCard>

<local:MyCard Title="卡片、提示条" Margin="0,0,0,15" CanSwap="True" IsSwaped="True">
	<StackPanel Margin="25,40,23,15">
		<local:MyHint Text="local:MyHint 代表提示条，它默认是警告样式。" />
		<local:MyHint Margin="0,8,0,2" IsWarn="False"
                    Text="将提示条的 IsWarn 属性改为 False 即可改为提示样式。&#xA;使用左边的那堆字符可以在任意地方手动换行，如果需要使用等号、引号等特殊字符，可以自行百度 XAML 转义字符。" />
        <TextBlock TextWrapping="Wrap" Margin="0,6,0,0"
                    Text="卡片（local:MyCard）的 Title 属性决定了它的标题。&#xA;为卡片添加 CanSwap 属性让它可以被折叠，True 代表是，False 代表否。在此基础上，再使用 IsSwaped 属性调整它是否默认被折叠。" />
	</StackPanel>
</local:MyCard>

<local:MyCard Title="长宽属性、图片" Margin="0,0,0,15" CanSwap="True" IsSwaped="True">
	<StackPanel Margin="25,40,23,15">
        <TextBlock TextWrapping="Wrap" Margin="0,0,0,4" Width="320" HorizontalAlignment="Right"
                    Text="任意项目都可以添加 Width 与 Height 属性来控制宽高。HorizontalAlignment 属性可以控制对齐：Center 代表居中，Right 代表居右，例如这段文本就被居右了。" />
        <TextBlock TextWrapping="Wrap" Margin="0,0,0,6"
                    Text="Image 代表图片，你需要在它的 Source 属性中填写一个网址或文件路径，它会从该处获取图片并显示。通常需要使用 Height 限制它的高度。" />
		<Image Height="50" HorizontalAlignment="Center" Source="https://zh.minecraft.wiki/images/Grass_Block_JE7_BE6.png?bf67e" />
	</StackPanel>
</local:MyCard>  -->

<local:MyCard Title="公告" Margin="0,0,0,15" CanSwap="True" IsSwaped="False">
        <StackPanel Margin="25,40,23,15">
        <TextBlock TextWrapping="Wrap" Margin="0,0,0,4"
                    Text="更新测试" />
        </StackPanel>
</local:MyCard>

<!-- 

全部通用的属性：
 - Width、Height：设置宽度与高度
 - ToolTip：设置鼠标指向时的提示文本
 - Margin：调整外边距（格式为 左,上,右,下。例如 Margin="0,0,0,2" 即为 2 单位的下边距）
 - HorizontalAlignment：设置横向对齐方式，居左：Left、居中：Center、居右：Right、拉伸（默认）：Stretch
 - VerticalAlignment：设置纵向对齐方式，居上：Top、居中：Center、居下：Bottom、拉伸（默认）：Stretch
 - IsHitTestVisible：该控件是否响应交互（点击、指向动画等），True 为是（默认），False 为否

TextBlock（纯文本）：
 - Text：设置显示的文本（如果要使用引号等特殊字符，自行百度 XAML 转义）
 - TextWrapping：开启自动换行
 - FontSize：设置字号
 - FontWeight：设置为 Bold 时，文字加粗
 - Foreground：调整前景颜色（十六进制字符串，例如 #FF010203 代表 ARGB 中的 255,1,2,3。前两位代表不透明度，FF 为全不透明，00 为全透明）

Image（图片）：
 - Source：要显示的图片的网址，或 PCL 内置图片位置

local:MyCard（卡片）：
 - Title：设置显示的标题文本
 - CanSwap：卡片是否可以折叠，True 为是，False 为否
 - IsSwaped：卡片是否默认折叠，要求 CanSwap 必须为 True
 - HorizontalAlignment：若使用，要求 CanSwap 必须为 False
 - UseAnimation：是否在展开等高度改变时触发动画，True 为是（默认），False 为否
 - SwapLogoRight：卡片折叠时的箭头是朝下还是朝右，True 为朝右，False 为朝下（默认）
 - HasMouseAnimation：是否在鼠标指向时改变卡片颜色，True 为是（默认），False 为否

local:MyHint（提示条）：
 - Text：设置显示的文本（&#xA; 代表换行）
 - IsWarn：设置为 True 代表警告样式，False 代表提示样式

local:MyButton（按钮）：
 - Text：设置显示的文本
 - Padding：设置内边距，格式与 Margin 一致
 - ColorType：设置颜色主题（Highlight 为当前启动器的主题颜色，Red 为红色，默认为黑色）
 - EventType、EventData：触发特定事件

local:MyTextButton（文本按钮）：
 - Text：设置显示的文本
 - EventType、EventData：触发特定事件

local:MyListItem（列表项）：
 - Logo：列表项的图标（所指定的可以是链接也可以是文件路径）
 - Title：列表项的大标题
 - Info：列表项的详细信息，它将会以灰色显示在大标题下方
 - Type：若留空仅单纯展示信息，设置为 Clickable 触发相应活动

local:MyIconTextButton（带图标的按钮）：
 - Text：设置显示的文本
 - Logo：设置显示的图标
 - LogoScale：设置图标的缩放，默认为 1
 - ColorType：设置颜色主题（Highlight 为当前启动器的主题颜色，默认为黑色）
 - EventType、EventData：触发特定事件

local:MyIconButton（图标按钮）：
 - Logo：设置显示的图标
 - LogoScale：设置图标的缩放，默认为 1
 - Theme：设置颜色主题，Color（默认）为当前启动器的主题颜色，也可设置为 White、Black、Red
 - EventType、EventData：触发特定事件

-->
